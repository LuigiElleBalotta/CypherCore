// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/authentication_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Authentication.V1 {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/authentication_service.proto</summary>
  public static partial class AuthenticationServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/authentication_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthenticationServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5iZ3MvbG93L3BiL2NsaWVudC9hdXRoZW50aWNhdGlvbl9zZXJ2aWNlLnBy",
            "b3RvEh5iZ3MucHJvdG9jb2wuYXV0aGVudGljYXRpb24udjEaJWJncy9sb3cv",
            "cGIvY2xpZW50L2FjY291bnRfdHlwZXMucHJvdG8aLGJncy9sb3cvcGIvY2xp",
            "ZW50L2NvbnRlbnRfaGFuZGxlX3R5cGVzLnByb3RvGiRiZ3MvbG93L3BiL2Ns",
            "aWVudC9lbnRpdHlfdHlwZXMucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L3Jw",
            "Y190eXBlcy5wcm90bxo5YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVu",
            "c2lvbnMvbWVzc2FnZV9vcHRpb25zLnByb3RvGjdiZ3MvbG93L3BiL2NsaWVu",
            "dC9nbG9iYWxfZXh0ZW5zaW9ucy9maWVsZF9vcHRpb25zLnByb3RvGjhiZ3Mv",
            "bG93L3BiL2NsaWVudC9nbG9iYWxfZXh0ZW5zaW9ucy9tZXRob2Rfb3B0aW9u",
            "cy5wcm90bxo5YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMv",
            "c2VydmljZV9vcHRpb25zLnByb3RvIlgKEU1vZHVsZUxvYWRSZXF1ZXN0EjIK",
            "DW1vZHVsZV9oYW5kbGUYASACKAsyGy5iZ3MucHJvdG9jb2wuQ29udGVudEhh",
            "bmRsZRIPCgdtZXNzYWdlGAIgASgMIjcKEk1vZHVsZU5vdGlmaWNhdGlvbhIR",
            "Cgltb2R1bGVfaWQYAiABKAUSDgoGcmVzdWx0GAMgASgNIjoKFE1vZHVsZU1l",
            "c3NhZ2VSZXF1ZXN0EhEKCW1vZHVsZV9pZBgBIAIoBRIPCgdtZXNzYWdlGAIg",
            "ASgMIo4CCgxMb2dvblJlcXVlc3QSDwoHcHJvZ3JhbRgBIAEoCRIQCghwbGF0",
            "Zm9ybRgCIAEoCRIOCgZsb2NhbGUYAyABKAkSDQoFZW1haWwYBCABKAkSDwoH",
            "dmVyc2lvbhgFIAEoCRIbChNhcHBsaWNhdGlvbl92ZXJzaW9uGAYgASgFEhcK",
            "D3B1YmxpY19jb21wdXRlchgHIAEoCBIuCh9hbGxvd19sb2dvbl9xdWV1ZV9u",
            "b3RpZmljYXRpb25zGAogASgIOgVmYWxzZRIeChZjYWNoZWRfd2ViX2NyZWRl",
            "bnRpYWxzGAwgASgMEhIKCnVzZXJfYWdlbnQYDiABKAkSEQoJZGV2aWNlX2lk",
            "GA8gASgJIq0CCgtMb2dvblJlc3VsdBISCgplcnJvcl9jb2RlGAEgAigNEioK",
            "CmFjY291bnRfaWQYAiABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQSLwoP",
            "Z2FtZV9hY2NvdW50X2lkGAMgAygLMhYuYmdzLnByb3RvY29sLkVudGl0eUlk",
            "Eg0KBWVtYWlsGAQgASgJEhgKEGF2YWlsYWJsZV9yZWdpb24YBSADKA0SGAoQ",
            "Y29ubmVjdGVkX3JlZ2lvbhgGIAEoDRISCgpiYXR0bGVfdGFnGAcgASgJEhUK",
            "DWdlb2lwX2NvdW50cnkYCCABKAkSEwoLc2Vzc2lvbl9rZXkYCSABKAwSFwoP",
            "cmVzdHJpY3RlZF9tb2RlGAogASgIEhEKCWNsaWVudF9pZBgLIAEoCSIqChdH",
            "ZW5lcmF0ZVNTT1Rva2VuUmVxdWVzdBIPCgdwcm9ncmFtGAEgASgHIj4KGEdl",
            "bmVyYXRlU1NPVG9rZW5SZXNwb25zZRIOCgZzc29faWQYASABKAwSEgoKc3Nv",
            "X3NlY3JldBgCIAEoDCIoChJMb2dvblVwZGF0ZVJlcXVlc3QSEgoKZXJyb3Jf",
            "Y29kZRgBIAIoDSJhChdMb2dvblF1ZXVlVXBkYXRlUmVxdWVzdBIQCghwb3Np",
            "dGlvbhgBIAIoDRIWCg5lc3RpbWF0ZWRfdGltZRgCIAIoBBIcChRldGFfZGV2",
            "aWF0aW9uX2luX3NlYxgDIAIoBCK+AQobQWNjb3VudFNldHRpbmdzTm90aWZp",
            "Y2F0aW9uEjkKCGxpY2Vuc2VzGAEgAygLMicuYmdzLnByb3RvY29sLmFjY291",
            "bnQudjEuQWNjb3VudExpY2Vuc2USFAoMaXNfdXNpbmdfcmlkGAIgASgIEhsK",
            "E2lzX3BsYXlpbmdfZnJvbV9pZ3IYAyABKAgSGQoRY2FuX3JlY2VpdmVfdm9p",
            "Y2UYBCABKAgSFgoOY2FuX3NlbmRfdm9pY2UYBSABKAgiPQoYU2VydmVyU3Rh",
            "dGVDaGFuZ2VSZXF1ZXN0Eg0KBXN0YXRlGAEgAigNEhIKCmV2ZW50X3RpbWUY",
            "AiACKAQiVAoLVmVyc2lvbkluZm8SDgoGbnVtYmVyGAEgASgNEg0KBXBhdGNo",
            "GAIgASgJEhMKC2lzX29wdGlvbmFsGAMgASgIEhEKCWtpY2tfdGltZRgEIAEo",
            "BCJcChdWZXJzaW9uSW5mb05vdGlmaWNhdGlvbhJBCgx2ZXJzaW9uX2luZm8Y",
            "ASABKAsyKy5iZ3MucHJvdG9jb2wuYXV0aGVudGljYXRpb24udjEuVmVyc2lv",
            "bkluZm8iXwoUTWVtTW9kdWxlTG9hZFJlcXVlc3QSKwoGaGFuZGxlGAEgAigL",
            "MhsuYmdzLnByb3RvY29sLkNvbnRlbnRIYW5kbGUSCwoDa2V5GAIgAigMEg0K",
            "BWlucHV0GAMgAigMIiUKFU1lbU1vZHVsZUxvYWRSZXNwb25zZRIMCgRkYXRh",
            "GAEgAigMIksKGFNlbGVjdEdhbWVBY2NvdW50UmVxdWVzdBIvCg9nYW1lX2Fj",
            "Y291bnRfaWQYASACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQiXQoaR2Ft",
            "ZUFjY291bnRTZWxlY3RlZFJlcXVlc3QSDgoGcmVzdWx0GAEgAigNEi8KD2dh",
            "bWVfYWNjb3VudF9pZBgCIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZCIw",
            "Ch1HZW5lcmF0ZVdlYkNyZWRlbnRpYWxzUmVxdWVzdBIPCgdwcm9ncmFtGAEg",
            "ASgHIjkKHkdlbmVyYXRlV2ViQ3JlZGVudGlhbHNSZXNwb25zZRIXCg93ZWJf",
            "Y3JlZGVudGlhbHMYASABKAwiNgobVmVyaWZ5V2ViQ3JlZGVudGlhbHNSZXF1",
            "ZXN0EhcKD3dlYl9jcmVkZW50aWFscxgBIAEoDDKfCQoWQXV0aGVudGljYXRp",
            "b25MaXN0ZW5lchJnCgxPbk1vZHVsZUxvYWQSMS5iZ3MucHJvdG9jb2wuYXV0",
            "aGVudGljYXRpb24udjEuTW9kdWxlTG9hZFJlcXVlc3QaGS5iZ3MucHJvdG9j",
            "b2wuTk9fUkVTUE9OU0UiCYgCAYL5KwIIARJoCg9Pbk1vZHVsZU1lc3NhZ2US",
            "NC5iZ3MucHJvdG9jb2wuYXV0aGVudGljYXRpb24udjEuTW9kdWxlTWVzc2Fn",
            "ZVJlcXVlc3QaFC5iZ3MucHJvdG9jb2wuTm9EYXRhIgmIAgGC+SsCCAIScgoT",
            "T25TZXJ2ZXJTdGF0ZUNoYW5nZRI4LmJncy5wcm90b2NvbC5hdXRoZW50aWNh",
            "dGlvbi52MS5TZXJ2ZXJTdGF0ZUNoYW5nZVJlcXVlc3QaGS5iZ3MucHJvdG9j",
            "b2wuTk9fUkVTUE9OU0UiBoL5KwIIBBJhCg9PbkxvZ29uQ29tcGxldGUSKy5i",
            "Z3MucHJvdG9jb2wuYXV0aGVudGljYXRpb24udjEuTG9nb25SZXN1bHQaGS5i",
            "Z3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIIBRKGAQoPT25NZW1Nb2R1",
            "bGVMb2FkEjQuYmdzLnByb3RvY29sLmF1dGhlbnRpY2F0aW9uLnYxLk1lbU1v",
            "ZHVsZUxvYWRSZXF1ZXN0GjUuYmdzLnByb3RvY29sLmF1dGhlbnRpY2F0aW9u",
            "LnYxLk1lbU1vZHVsZUxvYWRSZXNwb25zZSIGgvkrAggGEmYKDU9uTG9nb25V",
            "cGRhdGUSMi5iZ3MucHJvdG9jb2wuYXV0aGVudGljYXRpb24udjEuTG9nb25V",
            "cGRhdGVSZXF1ZXN0GhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIgaC+SsC",
            "CAoScgoUT25WZXJzaW9uSW5mb1VwZGF0ZWQSNy5iZ3MucHJvdG9jb2wuYXV0",
            "aGVudGljYXRpb24udjEuVmVyc2lvbkluZm9Ob3RpZmljYXRpb24aGS5iZ3Mu",
            "cHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIICxJwChJPbkxvZ29uUXVldWVV",
            "cGRhdGUSNy5iZ3MucHJvdG9jb2wuYXV0aGVudGljYXRpb24udjEuTG9nb25R",
            "dWV1ZVVwZGF0ZVJlcXVlc3QaGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0Ui",
            "BoL5KwIIDBJKCg9PbkxvZ29uUXVldWVFbmQSFC5iZ3MucHJvdG9jb2wuTm9E",
            "YXRhGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIgaC+SsCCA0SeQoVT25H",
            "YW1lQWNjb3VudFNlbGVjdGVkEjouYmdzLnByb3RvY29sLmF1dGhlbnRpY2F0",
            "aW9uLnYxLkdhbWVBY2NvdW50U2VsZWN0ZWRSZXF1ZXN0GhkuYmdzLnByb3Rv",
            "Y29sLk5PX1JFU1BPTlNFIgmIAgGC+SsCCA4aPYL5KzMKMWJuZXQucHJvdG9j",
            "b2wuYXV0aGVudGljYXRpb24uQXV0aGVudGljYXRpb25DbGllbnSK+SsCCAEy",
            "+gcKFUF1dGhlbnRpY2F0aW9uU2VydmljZRJTCgVMb2dvbhIsLmJncy5wcm90",
            "b2NvbC5hdXRoZW50aWNhdGlvbi52MS5Mb2dvblJlcXVlc3QaFC5iZ3MucHJv",
            "dG9jb2wuTm9EYXRhIgaC+SsCCAESYwoMTW9kdWxlTm90aWZ5EjIuYmdzLnBy",
            "b3RvY29sLmF1dGhlbnRpY2F0aW9uLnYxLk1vZHVsZU5vdGlmaWNhdGlvbhoU",
            "LmJncy5wcm90b2NvbC5Ob0RhdGEiCYgCAYL5KwIIAhJmCg1Nb2R1bGVNZXNz",
            "YWdlEjQuYmdzLnByb3RvY29sLmF1dGhlbnRpY2F0aW9uLnYxLk1vZHVsZU1l",
            "c3NhZ2VSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIJiAIBgvkrAggD",
            "ElcKHFNlbGVjdEdhbWVBY2NvdW50X0RFUFJFQ0FURUQSFi5iZ3MucHJvdG9j",
            "b2wuRW50aXR5SWQaFC5iZ3MucHJvdG9jb2wuTm9EYXRhIgmIAgGC+SsCCAQS",
            "jQEKEEdlbmVyYXRlU1NPVG9rZW4SNy5iZ3MucHJvdG9jb2wuYXV0aGVudGlj",
            "YXRpb24udjEuR2VuZXJhdGVTU09Ub2tlblJlcXVlc3QaOC5iZ3MucHJvdG9j",
            "b2wuYXV0aGVudGljYXRpb24udjEuR2VuZXJhdGVTU09Ub2tlblJlc3BvbnNl",
            "IgaC+SsCCAUSbgoRU2VsZWN0R2FtZUFjY291bnQSOC5iZ3MucHJvdG9jb2wu",
            "YXV0aGVudGljYXRpb24udjEuU2VsZWN0R2FtZUFjY291bnRSZXF1ZXN0GhQu",
            "YmdzLnByb3RvY29sLk5vRGF0YSIJiAIBgvkrAggGEnEKFFZlcmlmeVdlYkNy",
            "ZWRlbnRpYWxzEjsuYmdzLnByb3RvY29sLmF1dGhlbnRpY2F0aW9uLnYxLlZl",
            "cmlmeVdlYkNyZWRlbnRpYWxzUmVxdWVzdBoULmJncy5wcm90b2NvbC5Ob0Rh",
            "dGEiBoL5KwIIBxKfAQoWR2VuZXJhdGVXZWJDcmVkZW50aWFscxI9LmJncy5w",
            "cm90b2NvbC5hdXRoZW50aWNhdGlvbi52MS5HZW5lcmF0ZVdlYkNyZWRlbnRp",
            "YWxzUmVxdWVzdBo+LmJncy5wcm90b2NvbC5hdXRoZW50aWNhdGlvbi52MS5H",
            "ZW5lcmF0ZVdlYkNyZWRlbnRpYWxzUmVzcG9uc2UiBoL5KwIICBpRgvkrMwox",
            "Ym5ldC5wcm90b2NvbC5hdXRoZW50aWNhdGlvbi5BdXRoZW50aWNhdGlvblNl",
            "cnZlcoL5KxAqDmF1dGhlbnRpY2F0aW9uivkrAhABQgOAAQA="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.Account.V1.AccountTypesReflection.Descriptor, global::Bgs.Protocol.ContentHandleTypesReflection.Descriptor, global::Bgs.Protocol.EntityTypesReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.ModuleLoadRequest), global::Bgs.Protocol.Authentication.V1.ModuleLoadRequest.Parser, new[]{ "ModuleHandle", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.ModuleNotification), global::Bgs.Protocol.Authentication.V1.ModuleNotification.Parser, new[]{ "ModuleId", "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.ModuleMessageRequest), global::Bgs.Protocol.Authentication.V1.ModuleMessageRequest.Parser, new[]{ "ModuleId", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.LogonRequest), global::Bgs.Protocol.Authentication.V1.LogonRequest.Parser, new[]{ "Program", "Platform", "Locale", "Email", "Version", "ApplicationVersion", "PublicComputer", "AllowLogonQueueNotifications", "CachedWebCredentials", "UserAgent", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.LogonResult), global::Bgs.Protocol.Authentication.V1.LogonResult.Parser, new[]{ "ErrorCode", "AccountId", "GameAccountId", "Email", "AvailableRegion", "ConnectedRegion", "BattleTag", "GeoipCountry", "SessionKey", "RestrictedMode", "ClientId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.GenerateSSOTokenRequest), global::Bgs.Protocol.Authentication.V1.GenerateSSOTokenRequest.Parser, new[]{ "Program" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.GenerateSSOTokenResponse), global::Bgs.Protocol.Authentication.V1.GenerateSSOTokenResponse.Parser, new[]{ "SsoId", "SsoSecret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.LogonUpdateRequest), global::Bgs.Protocol.Authentication.V1.LogonUpdateRequest.Parser, new[]{ "ErrorCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.LogonQueueUpdateRequest), global::Bgs.Protocol.Authentication.V1.LogonQueueUpdateRequest.Parser, new[]{ "Position", "EstimatedTime", "EtaDeviationInSec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.AccountSettingsNotification), global::Bgs.Protocol.Authentication.V1.AccountSettingsNotification.Parser, new[]{ "Licenses", "IsUsingRid", "IsPlayingFromIgr", "CanReceiveVoice", "CanSendVoice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.ServerStateChangeRequest), global::Bgs.Protocol.Authentication.V1.ServerStateChangeRequest.Parser, new[]{ "State", "EventTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.VersionInfo), global::Bgs.Protocol.Authentication.V1.VersionInfo.Parser, new[]{ "Number", "Patch", "IsOptional", "KickTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.VersionInfoNotification), global::Bgs.Protocol.Authentication.V1.VersionInfoNotification.Parser, new[]{ "VersionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.MemModuleLoadRequest), global::Bgs.Protocol.Authentication.V1.MemModuleLoadRequest.Parser, new[]{ "Handle", "Key", "Input" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.MemModuleLoadResponse), global::Bgs.Protocol.Authentication.V1.MemModuleLoadResponse.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.SelectGameAccountRequest), global::Bgs.Protocol.Authentication.V1.SelectGameAccountRequest.Parser, new[]{ "GameAccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.GameAccountSelectedRequest), global::Bgs.Protocol.Authentication.V1.GameAccountSelectedRequest.Parser, new[]{ "Result", "GameAccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.GenerateWebCredentialsRequest), global::Bgs.Protocol.Authentication.V1.GenerateWebCredentialsRequest.Parser, new[]{ "Program" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.GenerateWebCredentialsResponse), global::Bgs.Protocol.Authentication.V1.GenerateWebCredentialsResponse.Parser, new[]{ "WebCredentials" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Authentication.V1.VerifyWebCredentialsRequest), global::Bgs.Protocol.Authentication.V1.VerifyWebCredentialsRequest.Parser, new[]{ "WebCredentials" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ModuleLoadRequest : pb::IMessage<ModuleLoadRequest> {
    private static readonly pb::MessageParser<ModuleLoadRequest> _parser = new pb::MessageParser<ModuleLoadRequest>(() => new ModuleLoadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModuleLoadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleLoadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleLoadRequest(ModuleLoadRequest other) : this() {
      moduleHandle_ = other.HasModuleHandle ? other.moduleHandle_.Clone() : null;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleLoadRequest Clone() {
      return new ModuleLoadRequest(this);
    }

    /// <summary>Field number for the "module_handle" field.</summary>
    public const int ModuleHandleFieldNumber = 1;
    private global::Bgs.Protocol.ContentHandle moduleHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.ContentHandle ModuleHandle {
      get { return moduleHandle_; }
      set {
        moduleHandle_ = value;
      }
    }
    /// <summary>Gets whether the module_handle field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasModuleHandle {
      get { return moduleHandle_ != null; }
    }
    /// <summary>Clears the value of the module_handle field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearModuleHandle() {
      moduleHandle_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private readonly static pb::ByteString MessageDefaultValue = pb::ByteString.Empty;

    private pb::ByteString message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModuleLoadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModuleLoadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ModuleHandle, other.ModuleHandle)) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasModuleHandle) hash ^= ModuleHandle.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasModuleHandle) {
        output.WriteRawTag(10);
        output.WriteMessage(ModuleHandle);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteBytes(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasModuleHandle) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModuleHandle);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModuleLoadRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasModuleHandle) {
        if (!HasModuleHandle) {
          ModuleHandle = new global::Bgs.Protocol.ContentHandle();
        }
        ModuleHandle.MergeFrom(other.ModuleHandle);
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasModuleHandle) {
              ModuleHandle = new global::Bgs.Protocol.ContentHandle();
            }
            input.ReadMessage(ModuleHandle);
            break;
          }
          case 18: {
            Message = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModuleNotification : pb::IMessage<ModuleNotification> {
    private static readonly pb::MessageParser<ModuleNotification> _parser = new pb::MessageParser<ModuleNotification>(() => new ModuleNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModuleNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleNotification(ModuleNotification other) : this() {
      _hasBits0 = other._hasBits0;
      moduleId_ = other.moduleId_;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleNotification Clone() {
      return new ModuleNotification(this);
    }

    /// <summary>Field number for the "module_id" field.</summary>
    public const int ModuleIdFieldNumber = 2;
    private readonly static int ModuleIdDefaultValue = 0;

    private int moduleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModuleId {
      get { if ((_hasBits0 & 1) != 0) { return moduleId_; } else { return ModuleIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        moduleId_ = value;
      }
    }
    /// <summary>Gets whether the "module_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasModuleId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "module_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearModuleId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 3;
    private readonly static uint ResultDefaultValue = 0;

    private uint result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Result {
      get { if ((_hasBits0 & 2) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 2;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModuleNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModuleNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModuleId != other.ModuleId) return false;
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasModuleId) hash ^= ModuleId.GetHashCode();
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasModuleId) {
        output.WriteRawTag(16);
        output.WriteInt32(ModuleId);
      }
      if (HasResult) {
        output.WriteRawTag(24);
        output.WriteUInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasModuleId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModuleId);
      }
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModuleNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasModuleId) {
        ModuleId = other.ModuleId;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            ModuleId = input.ReadInt32();
            break;
          }
          case 24: {
            Result = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModuleMessageRequest : pb::IMessage<ModuleMessageRequest> {
    private static readonly pb::MessageParser<ModuleMessageRequest> _parser = new pb::MessageParser<ModuleMessageRequest>(() => new ModuleMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModuleMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleMessageRequest(ModuleMessageRequest other) : this() {
      _hasBits0 = other._hasBits0;
      moduleId_ = other.moduleId_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleMessageRequest Clone() {
      return new ModuleMessageRequest(this);
    }

    /// <summary>Field number for the "module_id" field.</summary>
    public const int ModuleIdFieldNumber = 1;
    private readonly static int ModuleIdDefaultValue = 0;

    private int moduleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModuleId {
      get { if ((_hasBits0 & 1) != 0) { return moduleId_; } else { return ModuleIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        moduleId_ = value;
      }
    }
    /// <summary>Gets whether the "module_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasModuleId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "module_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearModuleId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private readonly static pb::ByteString MessageDefaultValue = pb::ByteString.Empty;

    private pb::ByteString message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModuleMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModuleMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModuleId != other.ModuleId) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasModuleId) hash ^= ModuleId.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasModuleId) {
        output.WriteRawTag(8);
        output.WriteInt32(ModuleId);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteBytes(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasModuleId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModuleId);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModuleMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasModuleId) {
        ModuleId = other.ModuleId;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ModuleId = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogonRequest : pb::IMessage<LogonRequest> {
    private static readonly pb::MessageParser<LogonRequest> _parser = new pb::MessageParser<LogonRequest>(() => new LogonRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogonRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonRequest(LogonRequest other) : this() {
      _hasBits0 = other._hasBits0;
      program_ = other.program_;
      platform_ = other.platform_;
      locale_ = other.locale_;
      email_ = other.email_;
      version_ = other.version_;
      applicationVersion_ = other.applicationVersion_;
      publicComputer_ = other.publicComputer_;
      allowLogonQueueNotifications_ = other.allowLogonQueueNotifications_;
      cachedWebCredentials_ = other.cachedWebCredentials_;
      userAgent_ = other.userAgent_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonRequest Clone() {
      return new LogonRequest(this);
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 1;
    private readonly static string ProgramDefaultValue = "";

    private string program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Program {
      get { return program_ ?? ProgramDefaultValue; }
      set {
        program_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return program_ != null; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      program_ = null;
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 2;
    private readonly static string PlatformDefaultValue = "";

    private string platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_ ?? PlatformDefaultValue; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "platform" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlatform {
      get { return platform_ != null; }
    }
    /// <summary>Clears the value of the "platform" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlatform() {
      platform_ = null;
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 3;
    private readonly static string LocaleDefaultValue = "";

    private string locale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_ ?? LocaleDefaultValue; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "locale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocale {
      get { return locale_ != null; }
    }
    /// <summary>Clears the value of the "locale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocale() {
      locale_ = null;
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 4;
    private readonly static string EmailDefaultValue = "";

    private string email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_ ?? EmailDefaultValue; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "email" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEmail {
      get { return email_ != null; }
    }
    /// <summary>Clears the value of the "email" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEmail() {
      email_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 5;
    private readonly static string VersionDefaultValue = "";

    private string version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_ ?? VersionDefaultValue; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return version_ != null; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      version_ = null;
    }

    /// <summary>Field number for the "application_version" field.</summary>
    public const int ApplicationVersionFieldNumber = 6;
    private readonly static int ApplicationVersionDefaultValue = 0;

    private int applicationVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationVersion {
      get { if ((_hasBits0 & 1) != 0) { return applicationVersion_; } else { return ApplicationVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        applicationVersion_ = value;
      }
    }
    /// <summary>Gets whether the "application_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApplicationVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "application_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApplicationVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "public_computer" field.</summary>
    public const int PublicComputerFieldNumber = 7;
    private readonly static bool PublicComputerDefaultValue = false;

    private bool publicComputer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PublicComputer {
      get { if ((_hasBits0 & 2) != 0) { return publicComputer_; } else { return PublicComputerDefaultValue; } }
      set {
        _hasBits0 |= 2;
        publicComputer_ = value;
      }
    }
    /// <summary>Gets whether the "public_computer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPublicComputer {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "public_computer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPublicComputer() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "allow_logon_queue_notifications" field.</summary>
    public const int AllowLogonQueueNotificationsFieldNumber = 10;
    private readonly static bool AllowLogonQueueNotificationsDefaultValue = false;

    private bool allowLogonQueueNotifications_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowLogonQueueNotifications {
      get { if ((_hasBits0 & 4) != 0) { return allowLogonQueueNotifications_; } else { return AllowLogonQueueNotificationsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        allowLogonQueueNotifications_ = value;
      }
    }
    /// <summary>Gets whether the "allow_logon_queue_notifications" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAllowLogonQueueNotifications {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "allow_logon_queue_notifications" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAllowLogonQueueNotifications() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "cached_web_credentials" field.</summary>
    public const int CachedWebCredentialsFieldNumber = 12;
    private readonly static pb::ByteString CachedWebCredentialsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString cachedWebCredentials_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CachedWebCredentials {
      get { return cachedWebCredentials_ ?? CachedWebCredentialsDefaultValue; }
      set {
        cachedWebCredentials_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cached_web_credentials" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCachedWebCredentials {
      get { return cachedWebCredentials_ != null; }
    }
    /// <summary>Clears the value of the "cached_web_credentials" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCachedWebCredentials() {
      cachedWebCredentials_ = null;
    }

    /// <summary>Field number for the "user_agent" field.</summary>
    public const int UserAgentFieldNumber = 14;
    private readonly static string UserAgentDefaultValue = "";

    private string userAgent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserAgent {
      get { return userAgent_ ?? UserAgentDefaultValue; }
      set {
        userAgent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_agent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserAgent {
      get { return userAgent_ != null; }
    }
    /// <summary>Clears the value of the "user_agent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserAgent() {
      userAgent_ = null;
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 15;
    private readonly static string DeviceIdDefaultValue = "";

    private string deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_ ?? DeviceIdDefaultValue; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeviceId {
      get { return deviceId_ != null; }
    }
    /// <summary>Clears the value of the "device_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeviceId() {
      deviceId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogonRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogonRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Program != other.Program) return false;
      if (Platform != other.Platform) return false;
      if (Locale != other.Locale) return false;
      if (Email != other.Email) return false;
      if (Version != other.Version) return false;
      if (ApplicationVersion != other.ApplicationVersion) return false;
      if (PublicComputer != other.PublicComputer) return false;
      if (AllowLogonQueueNotifications != other.AllowLogonQueueNotifications) return false;
      if (CachedWebCredentials != other.CachedWebCredentials) return false;
      if (UserAgent != other.UserAgent) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProgram) hash ^= Program.GetHashCode();
      if (HasPlatform) hash ^= Platform.GetHashCode();
      if (HasLocale) hash ^= Locale.GetHashCode();
      if (HasEmail) hash ^= Email.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasApplicationVersion) hash ^= ApplicationVersion.GetHashCode();
      if (HasPublicComputer) hash ^= PublicComputer.GetHashCode();
      if (HasAllowLogonQueueNotifications) hash ^= AllowLogonQueueNotifications.GetHashCode();
      if (HasCachedWebCredentials) hash ^= CachedWebCredentials.GetHashCode();
      if (HasUserAgent) hash ^= UserAgent.GetHashCode();
      if (HasDeviceId) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasProgram) {
        output.WriteRawTag(10);
        output.WriteString(Program);
      }
      if (HasPlatform) {
        output.WriteRawTag(18);
        output.WriteString(Platform);
      }
      if (HasLocale) {
        output.WriteRawTag(26);
        output.WriteString(Locale);
      }
      if (HasEmail) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      if (HasVersion) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (HasApplicationVersion) {
        output.WriteRawTag(48);
        output.WriteInt32(ApplicationVersion);
      }
      if (HasPublicComputer) {
        output.WriteRawTag(56);
        output.WriteBool(PublicComputer);
      }
      if (HasAllowLogonQueueNotifications) {
        output.WriteRawTag(80);
        output.WriteBool(AllowLogonQueueNotifications);
      }
      if (HasCachedWebCredentials) {
        output.WriteRawTag(98);
        output.WriteBytes(CachedWebCredentials);
      }
      if (HasUserAgent) {
        output.WriteRawTag(114);
        output.WriteString(UserAgent);
      }
      if (HasDeviceId) {
        output.WriteRawTag(122);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasProgram) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Program);
      }
      if (HasPlatform) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (HasLocale) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (HasEmail) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (HasApplicationVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationVersion);
      }
      if (HasPublicComputer) {
        size += 1 + 1;
      }
      if (HasAllowLogonQueueNotifications) {
        size += 1 + 1;
      }
      if (HasCachedWebCredentials) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CachedWebCredentials);
      }
      if (HasUserAgent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAgent);
      }
      if (HasDeviceId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogonRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasProgram) {
        Program = other.Program;
      }
      if (other.HasPlatform) {
        Platform = other.Platform;
      }
      if (other.HasLocale) {
        Locale = other.Locale;
      }
      if (other.HasEmail) {
        Email = other.Email;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasApplicationVersion) {
        ApplicationVersion = other.ApplicationVersion;
      }
      if (other.HasPublicComputer) {
        PublicComputer = other.PublicComputer;
      }
      if (other.HasAllowLogonQueueNotifications) {
        AllowLogonQueueNotifications = other.AllowLogonQueueNotifications;
      }
      if (other.HasCachedWebCredentials) {
        CachedWebCredentials = other.CachedWebCredentials;
      }
      if (other.HasUserAgent) {
        UserAgent = other.UserAgent;
      }
      if (other.HasDeviceId) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Program = input.ReadString();
            break;
          }
          case 18: {
            Platform = input.ReadString();
            break;
          }
          case 26: {
            Locale = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
          case 48: {
            ApplicationVersion = input.ReadInt32();
            break;
          }
          case 56: {
            PublicComputer = input.ReadBool();
            break;
          }
          case 80: {
            AllowLogonQueueNotifications = input.ReadBool();
            break;
          }
          case 98: {
            CachedWebCredentials = input.ReadBytes();
            break;
          }
          case 114: {
            UserAgent = input.ReadString();
            break;
          }
          case 122: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogonResult : pb::IMessage<LogonResult> {
    private static readonly pb::MessageParser<LogonResult> _parser = new pb::MessageParser<LogonResult>(() => new LogonResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogonResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonResult(LogonResult other) : this() {
      _hasBits0 = other._hasBits0;
      errorCode_ = other.errorCode_;
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      gameAccountId_ = other.gameAccountId_.Clone();
      email_ = other.email_;
      availableRegion_ = other.availableRegion_.Clone();
      connectedRegion_ = other.connectedRegion_;
      battleTag_ = other.battleTag_;
      geoipCountry_ = other.geoipCountry_;
      sessionKey_ = other.sessionKey_;
      restrictedMode_ = other.restrictedMode_;
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonResult Clone() {
      return new LogonResult(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private readonly static uint ErrorCodeDefaultValue = 0;

    private uint errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ErrorCode {
      get { if ((_hasBits0 & 1) != 0) { return errorCode_; } else { return ErrorCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        errorCode_ = value;
      }
    }
    /// <summary>Gets whether the "error_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasErrorCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "error_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearErrorCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.EntityId> _repeated_gameAccountId_codec
        = pb::FieldCodec.ForMessage(26, global::Bgs.Protocol.EntityId.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.EntityId> gameAccountId_ = new pbc::RepeatedField<global::Bgs.Protocol.EntityId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.EntityId> GameAccountId {
      get { return gameAccountId_; }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 4;
    private readonly static string EmailDefaultValue = "";

    private string email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_ ?? EmailDefaultValue; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "email" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEmail {
      get { return email_ != null; }
    }
    /// <summary>Clears the value of the "email" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEmail() {
      email_ = null;
    }

    /// <summary>Field number for the "available_region" field.</summary>
    public const int AvailableRegionFieldNumber = 5;
    private static readonly pb::FieldCodec<uint> _repeated_availableRegion_codec
        = pb::FieldCodec.ForUInt32(40);
    private readonly pbc::RepeatedField<uint> availableRegion_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> AvailableRegion {
      get { return availableRegion_; }
    }

    /// <summary>Field number for the "connected_region" field.</summary>
    public const int ConnectedRegionFieldNumber = 6;
    private readonly static uint ConnectedRegionDefaultValue = 0;

    private uint connectedRegion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ConnectedRegion {
      get { if ((_hasBits0 & 2) != 0) { return connectedRegion_; } else { return ConnectedRegionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        connectedRegion_ = value;
      }
    }
    /// <summary>Gets whether the "connected_region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConnectedRegion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "connected_region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConnectedRegion() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "battle_tag" field.</summary>
    public const int BattleTagFieldNumber = 7;
    private readonly static string BattleTagDefaultValue = "";

    private string battleTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BattleTag {
      get { return battleTag_ ?? BattleTagDefaultValue; }
      set {
        battleTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "battle_tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBattleTag {
      get { return battleTag_ != null; }
    }
    /// <summary>Clears the value of the "battle_tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBattleTag() {
      battleTag_ = null;
    }

    /// <summary>Field number for the "geoip_country" field.</summary>
    public const int GeoipCountryFieldNumber = 8;
    private readonly static string GeoipCountryDefaultValue = "";

    private string geoipCountry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GeoipCountry {
      get { return geoipCountry_ ?? GeoipCountryDefaultValue; }
      set {
        geoipCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "geoip_country" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGeoipCountry {
      get { return geoipCountry_ != null; }
    }
    /// <summary>Clears the value of the "geoip_country" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGeoipCountry() {
      geoipCountry_ = null;
    }

    /// <summary>Field number for the "session_key" field.</summary>
    public const int SessionKeyFieldNumber = 9;
    private readonly static pb::ByteString SessionKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString sessionKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SessionKey {
      get { return sessionKey_ ?? SessionKeyDefaultValue; }
      set {
        sessionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "session_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSessionKey {
      get { return sessionKey_ != null; }
    }
    /// <summary>Clears the value of the "session_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSessionKey() {
      sessionKey_ = null;
    }

    /// <summary>Field number for the "restricted_mode" field.</summary>
    public const int RestrictedModeFieldNumber = 10;
    private readonly static bool RestrictedModeDefaultValue = false;

    private bool restrictedMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RestrictedMode {
      get { if ((_hasBits0 & 4) != 0) { return restrictedMode_; } else { return RestrictedModeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        restrictedMode_ = value;
      }
    }
    /// <summary>Gets whether the "restricted_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRestrictedMode {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "restricted_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRestrictedMode() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 11;
    private readonly static string ClientIdDefaultValue = "";

    private string clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_ ?? ClientIdDefaultValue; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClientId {
      get { return clientId_ != null; }
    }
    /// <summary>Clears the value of the "client_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientId() {
      clientId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogonResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogonResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if(!gameAccountId_.Equals(other.gameAccountId_)) return false;
      if (Email != other.Email) return false;
      if(!availableRegion_.Equals(other.availableRegion_)) return false;
      if (ConnectedRegion != other.ConnectedRegion) return false;
      if (BattleTag != other.BattleTag) return false;
      if (GeoipCountry != other.GeoipCountry) return false;
      if (SessionKey != other.SessionKey) return false;
      if (RestrictedMode != other.RestrictedMode) return false;
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasErrorCode) hash ^= ErrorCode.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      hash ^= gameAccountId_.GetHashCode();
      if (HasEmail) hash ^= Email.GetHashCode();
      hash ^= availableRegion_.GetHashCode();
      if (HasConnectedRegion) hash ^= ConnectedRegion.GetHashCode();
      if (HasBattleTag) hash ^= BattleTag.GetHashCode();
      if (HasGeoipCountry) hash ^= GeoipCountry.GetHashCode();
      if (HasSessionKey) hash ^= SessionKey.GetHashCode();
      if (HasRestrictedMode) hash ^= RestrictedMode.GetHashCode();
      if (HasClientId) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasErrorCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ErrorCode);
      }
      if (HasAccountId) {
        output.WriteRawTag(18);
        output.WriteMessage(AccountId);
      }
      gameAccountId_.WriteTo(output, _repeated_gameAccountId_codec);
      if (HasEmail) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      availableRegion_.WriteTo(output, _repeated_availableRegion_codec);
      if (HasConnectedRegion) {
        output.WriteRawTag(48);
        output.WriteUInt32(ConnectedRegion);
      }
      if (HasBattleTag) {
        output.WriteRawTag(58);
        output.WriteString(BattleTag);
      }
      if (HasGeoipCountry) {
        output.WriteRawTag(66);
        output.WriteString(GeoipCountry);
      }
      if (HasSessionKey) {
        output.WriteRawTag(74);
        output.WriteBytes(SessionKey);
      }
      if (HasRestrictedMode) {
        output.WriteRawTag(80);
        output.WriteBool(RestrictedMode);
      }
      if (HasClientId) {
        output.WriteRawTag(90);
        output.WriteString(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ErrorCode);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      size += gameAccountId_.CalculateSize(_repeated_gameAccountId_codec);
      if (HasEmail) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      size += availableRegion_.CalculateSize(_repeated_availableRegion_codec);
      if (HasConnectedRegion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectedRegion);
      }
      if (HasBattleTag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BattleTag);
      }
      if (HasGeoipCountry) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GeoipCountry);
      }
      if (HasSessionKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SessionKey);
      }
      if (HasRestrictedMode) {
        size += 1 + 1;
      }
      if (HasClientId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogonResult other) {
      if (other == null) {
        return;
      }
      if (other.HasErrorCode) {
        ErrorCode = other.ErrorCode;
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      gameAccountId_.Add(other.gameAccountId_);
      if (other.HasEmail) {
        Email = other.Email;
      }
      availableRegion_.Add(other.availableRegion_);
      if (other.HasConnectedRegion) {
        ConnectedRegion = other.ConnectedRegion;
      }
      if (other.HasBattleTag) {
        BattleTag = other.BattleTag;
      }
      if (other.HasGeoipCountry) {
        GeoipCountry = other.GeoipCountry;
      }
      if (other.HasSessionKey) {
        SessionKey = other.SessionKey;
      }
      if (other.HasRestrictedMode) {
        RestrictedMode = other.RestrictedMode;
      }
      if (other.HasClientId) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = input.ReadUInt32();
            break;
          }
          case 18: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
          case 26: {
            gameAccountId_.AddEntriesFrom(input, _repeated_gameAccountId_codec);
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42:
          case 40: {
            availableRegion_.AddEntriesFrom(input, _repeated_availableRegion_codec);
            break;
          }
          case 48: {
            ConnectedRegion = input.ReadUInt32();
            break;
          }
          case 58: {
            BattleTag = input.ReadString();
            break;
          }
          case 66: {
            GeoipCountry = input.ReadString();
            break;
          }
          case 74: {
            SessionKey = input.ReadBytes();
            break;
          }
          case 80: {
            RestrictedMode = input.ReadBool();
            break;
          }
          case 90: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GenerateSSOTokenRequest : pb::IMessage<GenerateSSOTokenRequest> {
    private static readonly pb::MessageParser<GenerateSSOTokenRequest> _parser = new pb::MessageParser<GenerateSSOTokenRequest>(() => new GenerateSSOTokenRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateSSOTokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateSSOTokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateSSOTokenRequest(GenerateSSOTokenRequest other) : this() {
      _hasBits0 = other._hasBits0;
      program_ = other.program_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateSSOTokenRequest Clone() {
      return new GenerateSSOTokenRequest(this);
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 1;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateSSOTokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateSSOTokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Program != other.Program) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProgram) hash ^= Program.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasProgram) {
        output.WriteRawTag(13);
        output.WriteFixed32(Program);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasProgram) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateSSOTokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasProgram) {
        Program = other.Program;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Program = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GenerateSSOTokenResponse : pb::IMessage<GenerateSSOTokenResponse> {
    private static readonly pb::MessageParser<GenerateSSOTokenResponse> _parser = new pb::MessageParser<GenerateSSOTokenResponse>(() => new GenerateSSOTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateSSOTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateSSOTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateSSOTokenResponse(GenerateSSOTokenResponse other) : this() {
      ssoId_ = other.ssoId_;
      ssoSecret_ = other.ssoSecret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateSSOTokenResponse Clone() {
      return new GenerateSSOTokenResponse(this);
    }

    /// <summary>Field number for the "sso_id" field.</summary>
    public const int SsoIdFieldNumber = 1;
    private readonly static pb::ByteString SsoIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString ssoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SsoId {
      get { return ssoId_ ?? SsoIdDefaultValue; }
      set {
        ssoId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sso_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSsoId {
      get { return ssoId_ != null; }
    }
    /// <summary>Clears the value of the "sso_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSsoId() {
      ssoId_ = null;
    }

    /// <summary>Field number for the "sso_secret" field.</summary>
    public const int SsoSecretFieldNumber = 2;
    private readonly static pb::ByteString SsoSecretDefaultValue = pb::ByteString.Empty;

    private pb::ByteString ssoSecret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SsoSecret {
      get { return ssoSecret_ ?? SsoSecretDefaultValue; }
      set {
        ssoSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sso_secret" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSsoSecret {
      get { return ssoSecret_ != null; }
    }
    /// <summary>Clears the value of the "sso_secret" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSsoSecret() {
      ssoSecret_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateSSOTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateSSOTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SsoId != other.SsoId) return false;
      if (SsoSecret != other.SsoSecret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSsoId) hash ^= SsoId.GetHashCode();
      if (HasSsoSecret) hash ^= SsoSecret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSsoId) {
        output.WriteRawTag(10);
        output.WriteBytes(SsoId);
      }
      if (HasSsoSecret) {
        output.WriteRawTag(18);
        output.WriteBytes(SsoSecret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSsoId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SsoId);
      }
      if (HasSsoSecret) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SsoSecret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateSSOTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasSsoId) {
        SsoId = other.SsoId;
      }
      if (other.HasSsoSecret) {
        SsoSecret = other.SsoSecret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SsoId = input.ReadBytes();
            break;
          }
          case 18: {
            SsoSecret = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogonUpdateRequest : pb::IMessage<LogonUpdateRequest> {
    private static readonly pb::MessageParser<LogonUpdateRequest> _parser = new pb::MessageParser<LogonUpdateRequest>(() => new LogonUpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogonUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonUpdateRequest(LogonUpdateRequest other) : this() {
      _hasBits0 = other._hasBits0;
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonUpdateRequest Clone() {
      return new LogonUpdateRequest(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private readonly static uint ErrorCodeDefaultValue = 0;

    private uint errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ErrorCode {
      get { if ((_hasBits0 & 1) != 0) { return errorCode_; } else { return ErrorCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        errorCode_ = value;
      }
    }
    /// <summary>Gets whether the "error_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasErrorCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "error_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearErrorCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogonUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogonUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasErrorCode) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasErrorCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogonUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasErrorCode) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogonQueueUpdateRequest : pb::IMessage<LogonQueueUpdateRequest> {
    private static readonly pb::MessageParser<LogonQueueUpdateRequest> _parser = new pb::MessageParser<LogonQueueUpdateRequest>(() => new LogonQueueUpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogonQueueUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonQueueUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonQueueUpdateRequest(LogonQueueUpdateRequest other) : this() {
      _hasBits0 = other._hasBits0;
      position_ = other.position_;
      estimatedTime_ = other.estimatedTime_;
      etaDeviationInSec_ = other.etaDeviationInSec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogonQueueUpdateRequest Clone() {
      return new LogonQueueUpdateRequest(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private readonly static uint PositionDefaultValue = 0;

    private uint position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Position {
      get { if ((_hasBits0 & 1) != 0) { return position_; } else { return PositionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        position_ = value;
      }
    }
    /// <summary>Gets whether the "position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPosition {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "position" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPosition() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "estimated_time" field.</summary>
    public const int EstimatedTimeFieldNumber = 2;
    private readonly static ulong EstimatedTimeDefaultValue = 0UL;

    private ulong estimatedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EstimatedTime {
      get { if ((_hasBits0 & 2) != 0) { return estimatedTime_; } else { return EstimatedTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        estimatedTime_ = value;
      }
    }
    /// <summary>Gets whether the "estimated_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEstimatedTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "estimated_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEstimatedTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "eta_deviation_in_sec" field.</summary>
    public const int EtaDeviationInSecFieldNumber = 3;
    private readonly static ulong EtaDeviationInSecDefaultValue = 0UL;

    private ulong etaDeviationInSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EtaDeviationInSec {
      get { if ((_hasBits0 & 4) != 0) { return etaDeviationInSec_; } else { return EtaDeviationInSecDefaultValue; } }
      set {
        _hasBits0 |= 4;
        etaDeviationInSec_ = value;
      }
    }
    /// <summary>Gets whether the "eta_deviation_in_sec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEtaDeviationInSec {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "eta_deviation_in_sec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEtaDeviationInSec() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogonQueueUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogonQueueUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Position != other.Position) return false;
      if (EstimatedTime != other.EstimatedTime) return false;
      if (EtaDeviationInSec != other.EtaDeviationInSec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPosition) hash ^= Position.GetHashCode();
      if (HasEstimatedTime) hash ^= EstimatedTime.GetHashCode();
      if (HasEtaDeviationInSec) hash ^= EtaDeviationInSec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPosition) {
        output.WriteRawTag(8);
        output.WriteUInt32(Position);
      }
      if (HasEstimatedTime) {
        output.WriteRawTag(16);
        output.WriteUInt64(EstimatedTime);
      }
      if (HasEtaDeviationInSec) {
        output.WriteRawTag(24);
        output.WriteUInt64(EtaDeviationInSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPosition) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Position);
      }
      if (HasEstimatedTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EstimatedTime);
      }
      if (HasEtaDeviationInSec) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EtaDeviationInSec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogonQueueUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasPosition) {
        Position = other.Position;
      }
      if (other.HasEstimatedTime) {
        EstimatedTime = other.EstimatedTime;
      }
      if (other.HasEtaDeviationInSec) {
        EtaDeviationInSec = other.EtaDeviationInSec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Position = input.ReadUInt32();
            break;
          }
          case 16: {
            EstimatedTime = input.ReadUInt64();
            break;
          }
          case 24: {
            EtaDeviationInSec = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountSettingsNotification : pb::IMessage<AccountSettingsNotification> {
    private static readonly pb::MessageParser<AccountSettingsNotification> _parser = new pb::MessageParser<AccountSettingsNotification>(() => new AccountSettingsNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountSettingsNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountSettingsNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountSettingsNotification(AccountSettingsNotification other) : this() {
      _hasBits0 = other._hasBits0;
      licenses_ = other.licenses_.Clone();
      isUsingRid_ = other.isUsingRid_;
      isPlayingFromIgr_ = other.isPlayingFromIgr_;
      canReceiveVoice_ = other.canReceiveVoice_;
      canSendVoice_ = other.canSendVoice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountSettingsNotification Clone() {
      return new AccountSettingsNotification(this);
    }

    /// <summary>Field number for the "licenses" field.</summary>
    public const int LicensesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Account.V1.AccountLicense> _repeated_licenses_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Account.V1.AccountLicense.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Account.V1.AccountLicense> licenses_ = new pbc::RepeatedField<global::Bgs.Protocol.Account.V1.AccountLicense>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Account.V1.AccountLicense> Licenses {
      get { return licenses_; }
    }

    /// <summary>Field number for the "is_using_rid" field.</summary>
    public const int IsUsingRidFieldNumber = 2;
    private readonly static bool IsUsingRidDefaultValue = false;

    private bool isUsingRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUsingRid {
      get { if ((_hasBits0 & 1) != 0) { return isUsingRid_; } else { return IsUsingRidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isUsingRid_ = value;
      }
    }
    /// <summary>Gets whether the "is_using_rid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsUsingRid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_using_rid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsUsingRid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_playing_from_igr" field.</summary>
    public const int IsPlayingFromIgrFieldNumber = 3;
    private readonly static bool IsPlayingFromIgrDefaultValue = false;

    private bool isPlayingFromIgr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPlayingFromIgr {
      get { if ((_hasBits0 & 2) != 0) { return isPlayingFromIgr_; } else { return IsPlayingFromIgrDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isPlayingFromIgr_ = value;
      }
    }
    /// <summary>Gets whether the "is_playing_from_igr" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsPlayingFromIgr {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_playing_from_igr" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsPlayingFromIgr() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "can_receive_voice" field.</summary>
    public const int CanReceiveVoiceFieldNumber = 4;
    private readonly static bool CanReceiveVoiceDefaultValue = false;

    private bool canReceiveVoice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanReceiveVoice {
      get { if ((_hasBits0 & 4) != 0) { return canReceiveVoice_; } else { return CanReceiveVoiceDefaultValue; } }
      set {
        _hasBits0 |= 4;
        canReceiveVoice_ = value;
      }
    }
    /// <summary>Gets whether the "can_receive_voice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanReceiveVoice {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "can_receive_voice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanReceiveVoice() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "can_send_voice" field.</summary>
    public const int CanSendVoiceFieldNumber = 5;
    private readonly static bool CanSendVoiceDefaultValue = false;

    private bool canSendVoice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSendVoice {
      get { if ((_hasBits0 & 8) != 0) { return canSendVoice_; } else { return CanSendVoiceDefaultValue; } }
      set {
        _hasBits0 |= 8;
        canSendVoice_ = value;
      }
    }
    /// <summary>Gets whether the "can_send_voice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSendVoice {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "can_send_voice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSendVoice() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountSettingsNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountSettingsNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!licenses_.Equals(other.licenses_)) return false;
      if (IsUsingRid != other.IsUsingRid) return false;
      if (IsPlayingFromIgr != other.IsPlayingFromIgr) return false;
      if (CanReceiveVoice != other.CanReceiveVoice) return false;
      if (CanSendVoice != other.CanSendVoice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= licenses_.GetHashCode();
      if (HasIsUsingRid) hash ^= IsUsingRid.GetHashCode();
      if (HasIsPlayingFromIgr) hash ^= IsPlayingFromIgr.GetHashCode();
      if (HasCanReceiveVoice) hash ^= CanReceiveVoice.GetHashCode();
      if (HasCanSendVoice) hash ^= CanSendVoice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      licenses_.WriteTo(output, _repeated_licenses_codec);
      if (HasIsUsingRid) {
        output.WriteRawTag(16);
        output.WriteBool(IsUsingRid);
      }
      if (HasIsPlayingFromIgr) {
        output.WriteRawTag(24);
        output.WriteBool(IsPlayingFromIgr);
      }
      if (HasCanReceiveVoice) {
        output.WriteRawTag(32);
        output.WriteBool(CanReceiveVoice);
      }
      if (HasCanSendVoice) {
        output.WriteRawTag(40);
        output.WriteBool(CanSendVoice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += licenses_.CalculateSize(_repeated_licenses_codec);
      if (HasIsUsingRid) {
        size += 1 + 1;
      }
      if (HasIsPlayingFromIgr) {
        size += 1 + 1;
      }
      if (HasCanReceiveVoice) {
        size += 1 + 1;
      }
      if (HasCanSendVoice) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountSettingsNotification other) {
      if (other == null) {
        return;
      }
      licenses_.Add(other.licenses_);
      if (other.HasIsUsingRid) {
        IsUsingRid = other.IsUsingRid;
      }
      if (other.HasIsPlayingFromIgr) {
        IsPlayingFromIgr = other.IsPlayingFromIgr;
      }
      if (other.HasCanReceiveVoice) {
        CanReceiveVoice = other.CanReceiveVoice;
      }
      if (other.HasCanSendVoice) {
        CanSendVoice = other.CanSendVoice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            licenses_.AddEntriesFrom(input, _repeated_licenses_codec);
            break;
          }
          case 16: {
            IsUsingRid = input.ReadBool();
            break;
          }
          case 24: {
            IsPlayingFromIgr = input.ReadBool();
            break;
          }
          case 32: {
            CanReceiveVoice = input.ReadBool();
            break;
          }
          case 40: {
            CanSendVoice = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerStateChangeRequest : pb::IMessage<ServerStateChangeRequest> {
    private static readonly pb::MessageParser<ServerStateChangeRequest> _parser = new pb::MessageParser<ServerStateChangeRequest>(() => new ServerStateChangeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerStateChangeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerStateChangeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerStateChangeRequest(ServerStateChangeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      state_ = other.state_;
      eventTime_ = other.eventTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerStateChangeRequest Clone() {
      return new ServerStateChangeRequest(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private readonly static uint StateDefaultValue = 0;

    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint State {
      get { if ((_hasBits0 & 1) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearState() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "event_time" field.</summary>
    public const int EventTimeFieldNumber = 2;
    private readonly static ulong EventTimeDefaultValue = 0UL;

    private ulong eventTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EventTime {
      get { if ((_hasBits0 & 2) != 0) { return eventTime_; } else { return EventTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        eventTime_ = value;
      }
    }
    /// <summary>Gets whether the "event_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEventTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "event_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEventTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerStateChangeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerStateChangeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (EventTime != other.EventTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasState) hash ^= State.GetHashCode();
      if (HasEventTime) hash ^= EventTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasState) {
        output.WriteRawTag(8);
        output.WriteUInt32(State);
      }
      if (HasEventTime) {
        output.WriteRawTag(16);
        output.WriteUInt64(EventTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (HasEventTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EventTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerStateChangeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasEventTime) {
        EventTime = other.EventTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadUInt32();
            break;
          }
          case 16: {
            EventTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VersionInfo : pb::IMessage<VersionInfo> {
    private static readonly pb::MessageParser<VersionInfo> _parser = new pb::MessageParser<VersionInfo>(() => new VersionInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionInfo(VersionInfo other) : this() {
      _hasBits0 = other._hasBits0;
      number_ = other.number_;
      patch_ = other.patch_;
      isOptional_ = other.isOptional_;
      kickTime_ = other.kickTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionInfo Clone() {
      return new VersionInfo(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    private readonly static uint NumberDefaultValue = 0;

    private uint number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Number {
      get { if ((_hasBits0 & 1) != 0) { return number_; } else { return NumberDefaultValue; } }
      set {
        _hasBits0 |= 1;
        number_ = value;
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNumber {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNumber() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private readonly static string PatchDefaultValue = "";

    private string patch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Patch {
      get { return patch_ ?? PatchDefaultValue; }
      set {
        patch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "patch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPatch {
      get { return patch_ != null; }
    }
    /// <summary>Clears the value of the "patch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPatch() {
      patch_ = null;
    }

    /// <summary>Field number for the "is_optional" field.</summary>
    public const int IsOptionalFieldNumber = 3;
    private readonly static bool IsOptionalDefaultValue = false;

    private bool isOptional_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOptional {
      get { if ((_hasBits0 & 2) != 0) { return isOptional_; } else { return IsOptionalDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isOptional_ = value;
      }
    }
    /// <summary>Gets whether the "is_optional" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsOptional {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_optional" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsOptional() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "kick_time" field.</summary>
    public const int KickTimeFieldNumber = 4;
    private readonly static ulong KickTimeDefaultValue = 0UL;

    private ulong kickTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong KickTime {
      get { if ((_hasBits0 & 4) != 0) { return kickTime_; } else { return KickTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        kickTime_ = value;
      }
    }
    /// <summary>Gets whether the "kick_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKickTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "kick_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKickTime() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Number != other.Number) return false;
      if (Patch != other.Patch) return false;
      if (IsOptional != other.IsOptional) return false;
      if (KickTime != other.KickTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNumber) hash ^= Number.GetHashCode();
      if (HasPatch) hash ^= Patch.GetHashCode();
      if (HasIsOptional) hash ^= IsOptional.GetHashCode();
      if (HasKickTime) hash ^= KickTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasNumber) {
        output.WriteRawTag(8);
        output.WriteUInt32(Number);
      }
      if (HasPatch) {
        output.WriteRawTag(18);
        output.WriteString(Patch);
      }
      if (HasIsOptional) {
        output.WriteRawTag(24);
        output.WriteBool(IsOptional);
      }
      if (HasKickTime) {
        output.WriteRawTag(32);
        output.WriteUInt64(KickTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Number);
      }
      if (HasPatch) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Patch);
      }
      if (HasIsOptional) {
        size += 1 + 1;
      }
      if (HasKickTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(KickTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      if (other.HasPatch) {
        Patch = other.Patch;
      }
      if (other.HasIsOptional) {
        IsOptional = other.IsOptional;
      }
      if (other.HasKickTime) {
        KickTime = other.KickTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Number = input.ReadUInt32();
            break;
          }
          case 18: {
            Patch = input.ReadString();
            break;
          }
          case 24: {
            IsOptional = input.ReadBool();
            break;
          }
          case 32: {
            KickTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VersionInfoNotification : pb::IMessage<VersionInfoNotification> {
    private static readonly pb::MessageParser<VersionInfoNotification> _parser = new pb::MessageParser<VersionInfoNotification>(() => new VersionInfoNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionInfoNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionInfoNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionInfoNotification(VersionInfoNotification other) : this() {
      versionInfo_ = other.HasVersionInfo ? other.versionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionInfoNotification Clone() {
      return new VersionInfoNotification(this);
    }

    /// <summary>Field number for the "version_info" field.</summary>
    public const int VersionInfoFieldNumber = 1;
    private global::Bgs.Protocol.Authentication.V1.VersionInfo versionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Authentication.V1.VersionInfo VersionInfo {
      get { return versionInfo_; }
      set {
        versionInfo_ = value;
      }
    }
    /// <summary>Gets whether the version_info field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionInfo {
      get { return versionInfo_ != null; }
    }
    /// <summary>Clears the value of the version_info field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionInfo() {
      versionInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionInfoNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionInfoNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VersionInfo, other.VersionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionInfo) hash ^= VersionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasVersionInfo) {
        output.WriteRawTag(10);
        output.WriteMessage(VersionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VersionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionInfoNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionInfo) {
        if (!HasVersionInfo) {
          VersionInfo = new global::Bgs.Protocol.Authentication.V1.VersionInfo();
        }
        VersionInfo.MergeFrom(other.VersionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasVersionInfo) {
              VersionInfo = new global::Bgs.Protocol.Authentication.V1.VersionInfo();
            }
            input.ReadMessage(VersionInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemModuleLoadRequest : pb::IMessage<MemModuleLoadRequest> {
    private static readonly pb::MessageParser<MemModuleLoadRequest> _parser = new pb::MessageParser<MemModuleLoadRequest>(() => new MemModuleLoadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemModuleLoadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemModuleLoadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemModuleLoadRequest(MemModuleLoadRequest other) : this() {
      handle_ = other.HasHandle ? other.handle_.Clone() : null;
      key_ = other.key_;
      input_ = other.input_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemModuleLoadRequest Clone() {
      return new MemModuleLoadRequest(this);
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 1;
    private global::Bgs.Protocol.ContentHandle handle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.ContentHandle Handle {
      get { return handle_; }
      set {
        handle_ = value;
      }
    }
    /// <summary>Gets whether the handle field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHandle {
      get { return handle_ != null; }
    }
    /// <summary>Clears the value of the handle field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHandle() {
      handle_ = null;
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private readonly static pb::ByteString KeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Key {
      get { return key_ ?? KeyDefaultValue; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKey {
      get { return key_ != null; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKey() {
      key_ = null;
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 3;
    private readonly static pb::ByteString InputDefaultValue = pb::ByteString.Empty;

    private pb::ByteString input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Input {
      get { return input_ ?? InputDefaultValue; }
      set {
        input_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "input" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInput {
      get { return input_ != null; }
    }
    /// <summary>Clears the value of the "input" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInput() {
      input_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemModuleLoadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemModuleLoadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Handle, other.Handle)) return false;
      if (Key != other.Key) return false;
      if (Input != other.Input) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHandle) hash ^= Handle.GetHashCode();
      if (HasKey) hash ^= Key.GetHashCode();
      if (HasInput) hash ^= Input.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasHandle) {
        output.WriteRawTag(10);
        output.WriteMessage(Handle);
      }
      if (HasKey) {
        output.WriteRawTag(18);
        output.WriteBytes(Key);
      }
      if (HasInput) {
        output.WriteRawTag(26);
        output.WriteBytes(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHandle) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Handle);
      }
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (HasInput) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemModuleLoadRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasHandle) {
        if (!HasHandle) {
          Handle = new global::Bgs.Protocol.ContentHandle();
        }
        Handle.MergeFrom(other.Handle);
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      if (other.HasInput) {
        Input = other.Input;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasHandle) {
              Handle = new global::Bgs.Protocol.ContentHandle();
            }
            input.ReadMessage(Handle);
            break;
          }
          case 18: {
            Key = input.ReadBytes();
            break;
          }
          case 26: {
            Input = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemModuleLoadResponse : pb::IMessage<MemModuleLoadResponse> {
    private static readonly pb::MessageParser<MemModuleLoadResponse> _parser = new pb::MessageParser<MemModuleLoadResponse>(() => new MemModuleLoadResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemModuleLoadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemModuleLoadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemModuleLoadResponse(MemModuleLoadResponse other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemModuleLoadResponse Clone() {
      return new MemModuleLoadResponse(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemModuleLoadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemModuleLoadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasData) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasData) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemModuleLoadResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SelectGameAccountRequest : pb::IMessage<SelectGameAccountRequest> {
    private static readonly pb::MessageParser<SelectGameAccountRequest> _parser = new pb::MessageParser<SelectGameAccountRequest>(() => new SelectGameAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectGameAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectGameAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectGameAccountRequest(SelectGameAccountRequest other) : this() {
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectGameAccountRequest Clone() {
      return new SelectGameAccountRequest(this);
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectGameAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectGameAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGameAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(GameAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectGameAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameAccountSelectedRequest : pb::IMessage<GameAccountSelectedRequest> {
    private static readonly pb::MessageParser<GameAccountSelectedRequest> _parser = new pb::MessageParser<GameAccountSelectedRequest>(() => new GameAccountSelectedRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameAccountSelectedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountSelectedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountSelectedRequest(GameAccountSelectedRequest other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountSelectedRequest Clone() {
      return new GameAccountSelectedRequest(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static uint ResultDefaultValue = 0;

    private uint result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameAccountSelectedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameAccountSelectedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteUInt32(Result);
      }
      if (HasGameAccountId) {
        output.WriteRawTag(18);
        output.WriteMessage(GameAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Result);
      }
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameAccountSelectedRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadUInt32();
            break;
          }
          case 18: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GenerateWebCredentialsRequest : pb::IMessage<GenerateWebCredentialsRequest> {
    private static readonly pb::MessageParser<GenerateWebCredentialsRequest> _parser = new pb::MessageParser<GenerateWebCredentialsRequest>(() => new GenerateWebCredentialsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateWebCredentialsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateWebCredentialsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateWebCredentialsRequest(GenerateWebCredentialsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      program_ = other.program_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateWebCredentialsRequest Clone() {
      return new GenerateWebCredentialsRequest(this);
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 1;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateWebCredentialsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateWebCredentialsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Program != other.Program) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProgram) hash ^= Program.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasProgram) {
        output.WriteRawTag(13);
        output.WriteFixed32(Program);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasProgram) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateWebCredentialsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasProgram) {
        Program = other.Program;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Program = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GenerateWebCredentialsResponse : pb::IMessage<GenerateWebCredentialsResponse> {
    private static readonly pb::MessageParser<GenerateWebCredentialsResponse> _parser = new pb::MessageParser<GenerateWebCredentialsResponse>(() => new GenerateWebCredentialsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateWebCredentialsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateWebCredentialsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateWebCredentialsResponse(GenerateWebCredentialsResponse other) : this() {
      webCredentials_ = other.webCredentials_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateWebCredentialsResponse Clone() {
      return new GenerateWebCredentialsResponse(this);
    }

    /// <summary>Field number for the "web_credentials" field.</summary>
    public const int WebCredentialsFieldNumber = 1;
    private readonly static pb::ByteString WebCredentialsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString webCredentials_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString WebCredentials {
      get { return webCredentials_ ?? WebCredentialsDefaultValue; }
      set {
        webCredentials_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "web_credentials" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWebCredentials {
      get { return webCredentials_ != null; }
    }
    /// <summary>Clears the value of the "web_credentials" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWebCredentials() {
      webCredentials_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateWebCredentialsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateWebCredentialsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WebCredentials != other.WebCredentials) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWebCredentials) hash ^= WebCredentials.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasWebCredentials) {
        output.WriteRawTag(10);
        output.WriteBytes(WebCredentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasWebCredentials) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(WebCredentials);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateWebCredentialsResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasWebCredentials) {
        WebCredentials = other.WebCredentials;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WebCredentials = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyWebCredentialsRequest : pb::IMessage<VerifyWebCredentialsRequest> {
    private static readonly pb::MessageParser<VerifyWebCredentialsRequest> _parser = new pb::MessageParser<VerifyWebCredentialsRequest>(() => new VerifyWebCredentialsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyWebCredentialsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Authentication.V1.AuthenticationServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyWebCredentialsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyWebCredentialsRequest(VerifyWebCredentialsRequest other) : this() {
      webCredentials_ = other.webCredentials_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyWebCredentialsRequest Clone() {
      return new VerifyWebCredentialsRequest(this);
    }

    /// <summary>Field number for the "web_credentials" field.</summary>
    public const int WebCredentialsFieldNumber = 1;
    private readonly static pb::ByteString WebCredentialsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString webCredentials_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString WebCredentials {
      get { return webCredentials_ ?? WebCredentialsDefaultValue; }
      set {
        webCredentials_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "web_credentials" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWebCredentials {
      get { return webCredentials_ != null; }
    }
    /// <summary>Clears the value of the "web_credentials" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWebCredentials() {
      webCredentials_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyWebCredentialsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyWebCredentialsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WebCredentials != other.WebCredentials) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWebCredentials) hash ^= WebCredentials.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasWebCredentials) {
        output.WriteRawTag(10);
        output.WriteBytes(WebCredentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasWebCredentials) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(WebCredentials);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyWebCredentialsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasWebCredentials) {
        WebCredentials = other.WebCredentials;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WebCredentials = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
