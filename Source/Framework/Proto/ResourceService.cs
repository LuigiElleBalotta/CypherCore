// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/resource_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Resources.V1 {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/resource_service.proto</summary>
  public static partial class ResourceServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/resource_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResourceServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihiZ3MvbG93L3BiL2NsaWVudC9yZXNvdXJjZV9zZXJ2aWNlLnByb3RvEhli",
            "Z3MucHJvdG9jb2wucmVzb3VyY2VzLnYxGixiZ3MvbG93L3BiL2NsaWVudC9j",
            "b250ZW50X2hhbmRsZV90eXBlcy5wcm90bxohYmdzL2xvdy9wYi9jbGllbnQv",
            "cnBjX3R5cGVzLnByb3RvGjliZ3MvbG93L3BiL2NsaWVudC9nbG9iYWxfZXh0",
            "ZW5zaW9ucy9tZXNzYWdlX29wdGlvbnMucHJvdG8aN2Jncy9sb3cvcGIvY2xp",
            "ZW50L2dsb2JhbF9leHRlbnNpb25zL2ZpZWxkX29wdGlvbnMucHJvdG8aOGJn",
            "cy9sb3cvcGIvY2xpZW50L2dsb2JhbF9leHRlbnNpb25zL21ldGhvZF9vcHRp",
            "b25zLnByb3RvGjliZ3MvbG93L3BiL2NsaWVudC9nbG9iYWxfZXh0ZW5zaW9u",
            "cy9zZXJ2aWNlX29wdGlvbnMucHJvdG8iXAoUQ29udGVudEhhbmRsZVJlcXVl",
            "c3QSDwoHcHJvZ3JhbRgBIAIoBxIOCgZzdHJlYW0YAiACKAcSGwoHdmVyc2lv",
            "bhgDIAEoBzoKMTcwMTcyOTYxOToGgvkrAhABMroBChBSZXNvdXJjZXNTZXJ2",
            "aWNlEmgKEEdldENvbnRlbnRIYW5kbGUSLy5iZ3MucHJvdG9jb2wucmVzb3Vy",
            "Y2VzLnYxLkNvbnRlbnRIYW5kbGVSZXF1ZXN0GhsuYmdzLnByb3RvY29sLkNv",
            "bnRlbnRIYW5kbGUiBoL5KwIIARo8gvkrIwohYm5ldC5wcm90b2NvbC5yZXNv",
            "dXJjZXMuUmVzb3VyY2VzgvkrCyoJcmVzb3VyY2VzivkrAhABQgOAAQA="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.ContentHandleTypesReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Resources.V1.ContentHandleRequest), global::Bgs.Protocol.Resources.V1.ContentHandleRequest.Parser, new[]{ "Program", "Stream", "Version" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ContentHandleRequest : pb::IMessage<ContentHandleRequest> {
    private static readonly pb::MessageParser<ContentHandleRequest> _parser = new pb::MessageParser<ContentHandleRequest>(() => new ContentHandleRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContentHandleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Resources.V1.ResourceServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentHandleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentHandleRequest(ContentHandleRequest other) : this() {
      _hasBits0 = other._hasBits0;
      program_ = other.program_;
      stream_ = other.stream_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentHandleRequest Clone() {
      return new ContentHandleRequest(this);
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 1;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 2;
    private readonly static uint StreamDefaultValue = 0;

    private uint stream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Stream {
      get { if ((_hasBits0 & 2) != 0) { return stream_; } else { return StreamDefaultValue; } }
      set {
        _hasBits0 |= 2;
        stream_ = value;
      }
    }
    /// <summary>Gets whether the "stream" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStream {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStream() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private readonly static uint VersionDefaultValue = 1701729619;

    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { if ((_hasBits0 & 4) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContentHandleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContentHandleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Program != other.Program) return false;
      if (Stream != other.Stream) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProgram) hash ^= Program.GetHashCode();
      if (HasStream) hash ^= Stream.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasProgram) {
        output.WriteRawTag(13);
        output.WriteFixed32(Program);
      }
      if (HasStream) {
        output.WriteRawTag(21);
        output.WriteFixed32(Stream);
      }
      if (HasVersion) {
        output.WriteRawTag(29);
        output.WriteFixed32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasProgram) {
        size += 1 + 4;
      }
      if (HasStream) {
        size += 1 + 4;
      }
      if (HasVersion) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContentHandleRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasProgram) {
        Program = other.Program;
      }
      if (other.HasStream) {
        Stream = other.Stream;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Program = input.ReadFixed32();
            break;
          }
          case 21: {
            Stream = input.ReadFixed32();
            break;
          }
          case 29: {
            Version = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
