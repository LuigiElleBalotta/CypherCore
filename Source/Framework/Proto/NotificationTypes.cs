// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/notification_types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Notification.V1 {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/notification_types.proto</summary>
  public static partial class NotificationTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/notification_types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NotificationTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CipiZ3MvbG93L3BiL2NsaWVudC9ub3RpZmljYXRpb25fdHlwZXMucHJvdG8S",
            "HGJncy5wcm90b2NvbC5ub3RpZmljYXRpb24udjEaJWJncy9sb3cvcGIvY2xp",
            "ZW50L2FjY291bnRfdHlwZXMucHJvdG8aJ2Jncy9sb3cvcGIvY2xpZW50L2F0",
            "dHJpYnV0ZV90eXBlcy5wcm90bxokYmdzL2xvdy9wYi9jbGllbnQvZW50aXR5",
            "X3R5cGVzLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9ycGNfdHlwZXMucHJv",
            "dG8aOWJncy9sb3cvcGIvY2xpZW50L2dsb2JhbF9leHRlbnNpb25zL21lc3Nh",
            "Z2Vfb3B0aW9ucy5wcm90bxo3YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4",
            "dGVuc2lvbnMvZmllbGRfb3B0aW9ucy5wcm90bxo4YmdzL2xvdy9wYi9jbGll",
            "bnQvZ2xvYmFsX2V4dGVuc2lvbnMvbWV0aG9kX29wdGlvbnMucHJvdG8aOWJn",
            "cy9sb3cvcGIvY2xpZW50L2dsb2JhbF9leHRlbnNpb25zL3NlcnZpY2Vfb3B0",
            "aW9ucy5wcm90byJLCgZUYXJnZXQSMwoIaWRlbnRpdHkYASABKAsyIS5iZ3Mu",
            "cHJvdG9jb2wuYWNjb3VudC52MS5JZGVudGl0eRIMCgR0eXBlGAIgASgJIp0B",
            "CgxTdWJzY3JpcHRpb24SNAoGdGFyZ2V0GAEgAygLMiQuYmdzLnByb3RvY29s",
            "Lm5vdGlmaWNhdGlvbi52MS5UYXJnZXQSNQoKc3Vic2NyaWJlchgCIAEoCzIh",
            "LmJncy5wcm90b2NvbC5hY2NvdW50LnYxLklkZW50aXR5EiAKEWRlbGl2ZXJ5",
            "X3JlcXVpcmVkGAMgASgIOgVmYWxzZSKhAwoMTm90aWZpY2F0aW9uEikKCXNl",
            "bmRlcl9pZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZBIpCgl0YXJn",
            "ZXRfaWQYAiACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQSDAoEdHlwZRgD",
            "IAIoCRIqCglhdHRyaWJ1dGUYBCADKAsyFy5iZ3MucHJvdG9jb2wuQXR0cmli",
            "dXRlEjEKEXNlbmRlcl9hY2NvdW50X2lkGAUgASgLMhYuYmdzLnByb3RvY29s",
            "LkVudGl0eUlkEjEKEXRhcmdldF9hY2NvdW50X2lkGAYgASgLMhYuYmdzLnBy",
            "b3RvY29sLkVudGl0eUlkEhkKEXNlbmRlcl9iYXR0bGVfdGFnGAcgASgJEhkK",
            "EXRhcmdldF9iYXR0bGVfdGFnGAggASgJEiUKBHBlZXIYCSABKAsyFy5iZ3Mu",
            "cHJvdG9jb2wuUHJvY2Vzc0lkEj4KE2ZvcndhcmRpbmdfaWRlbnRpdHkYCiAB",
            "KAsyIS5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5JZGVudGl0eQ=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.Account.V1.AccountTypesReflection.Descriptor, global::Bgs.Protocol.AttributeTypesReflection.Descriptor, global::Bgs.Protocol.EntityTypesReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Notification.V1.Target), global::Bgs.Protocol.Notification.V1.Target.Parser, new[]{ "Identity", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Notification.V1.Subscription), global::Bgs.Protocol.Notification.V1.Subscription.Parser, new[]{ "Target", "Subscriber", "DeliveryRequired" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Notification.V1.Notification), global::Bgs.Protocol.Notification.V1.Notification.Parser, new[]{ "SenderId", "TargetId", "Type", "Attribute", "SenderAccountId", "TargetAccountId", "SenderBattleTag", "TargetBattleTag", "Peer", "ForwardingIdentity" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Target : pb::IMessage<Target> {
    private static readonly pb::MessageParser<Target> _parser = new pb::MessageParser<Target>(() => new Target());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Target> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Notification.V1.NotificationTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Target() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Target(Target other) : this() {
      identity_ = other.HasIdentity ? other.identity_.Clone() : null;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Target Clone() {
      return new Target(this);
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.Identity identity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.Identity Identity {
      get { return identity_; }
      set {
        identity_ = value;
      }
    }
    /// <summary>Gets whether the identity field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIdentity {
      get { return identity_ != null; }
    }
    /// <summary>Clears the value of the identity field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdentity() {
      identity_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Target);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Target other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Identity, other.Identity)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIdentity) hash ^= Identity.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasIdentity) {
        output.WriteRawTag(10);
        output.WriteMessage(Identity);
      }
      if (HasType) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasIdentity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Identity);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Target other) {
      if (other == null) {
        return;
      }
      if (other.HasIdentity) {
        if (!HasIdentity) {
          Identity = new global::Bgs.Protocol.Account.V1.Identity();
        }
        Identity.MergeFrom(other.Identity);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasIdentity) {
              Identity = new global::Bgs.Protocol.Account.V1.Identity();
            }
            input.ReadMessage(Identity);
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Subscription : pb::IMessage<Subscription> {
    private static readonly pb::MessageParser<Subscription> _parser = new pb::MessageParser<Subscription>(() => new Subscription());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Subscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Notification.V1.NotificationTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription(Subscription other) : this() {
      _hasBits0 = other._hasBits0;
      target_ = other.target_.Clone();
      subscriber_ = other.HasSubscriber ? other.subscriber_.Clone() : null;
      deliveryRequired_ = other.deliveryRequired_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription Clone() {
      return new Subscription(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Notification.V1.Target> _repeated_target_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Notification.V1.Target.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Notification.V1.Target> target_ = new pbc::RepeatedField<global::Bgs.Protocol.Notification.V1.Target>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Notification.V1.Target> Target {
      get { return target_; }
    }

    /// <summary>Field number for the "subscriber" field.</summary>
    public const int SubscriberFieldNumber = 2;
    private global::Bgs.Protocol.Account.V1.Identity subscriber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.Identity Subscriber {
      get { return subscriber_; }
      set {
        subscriber_ = value;
      }
    }
    /// <summary>Gets whether the subscriber field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscriber {
      get { return subscriber_ != null; }
    }
    /// <summary>Clears the value of the subscriber field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscriber() {
      subscriber_ = null;
    }

    /// <summary>Field number for the "delivery_required" field.</summary>
    public const int DeliveryRequiredFieldNumber = 3;
    private readonly static bool DeliveryRequiredDefaultValue = false;

    private bool deliveryRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeliveryRequired {
      get { if ((_hasBits0 & 1) != 0) { return deliveryRequired_; } else { return DeliveryRequiredDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deliveryRequired_ = value;
      }
    }
    /// <summary>Gets whether the "delivery_required" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeliveryRequired {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "delivery_required" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeliveryRequired() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Subscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Subscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!target_.Equals(other.target_)) return false;
      if (!object.Equals(Subscriber, other.Subscriber)) return false;
      if (DeliveryRequired != other.DeliveryRequired) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= target_.GetHashCode();
      if (HasSubscriber) hash ^= Subscriber.GetHashCode();
      if (HasDeliveryRequired) hash ^= DeliveryRequired.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      target_.WriteTo(output, _repeated_target_codec);
      if (HasSubscriber) {
        output.WriteRawTag(18);
        output.WriteMessage(Subscriber);
      }
      if (HasDeliveryRequired) {
        output.WriteRawTag(24);
        output.WriteBool(DeliveryRequired);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += target_.CalculateSize(_repeated_target_codec);
      if (HasSubscriber) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subscriber);
      }
      if (HasDeliveryRequired) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Subscription other) {
      if (other == null) {
        return;
      }
      target_.Add(other.target_);
      if (other.HasSubscriber) {
        if (!HasSubscriber) {
          Subscriber = new global::Bgs.Protocol.Account.V1.Identity();
        }
        Subscriber.MergeFrom(other.Subscriber);
      }
      if (other.HasDeliveryRequired) {
        DeliveryRequired = other.DeliveryRequired;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            target_.AddEntriesFrom(input, _repeated_target_codec);
            break;
          }
          case 18: {
            if (!HasSubscriber) {
              Subscriber = new global::Bgs.Protocol.Account.V1.Identity();
            }
            input.ReadMessage(Subscriber);
            break;
          }
          case 24: {
            DeliveryRequired = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Notification : pb::IMessage<Notification> {
    private static readonly pb::MessageParser<Notification> _parser = new pb::MessageParser<Notification>(() => new Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Notification.V1.NotificationTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification(Notification other) : this() {
      senderId_ = other.HasSenderId ? other.senderId_.Clone() : null;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      type_ = other.type_;
      attribute_ = other.attribute_.Clone();
      senderAccountId_ = other.HasSenderAccountId ? other.senderAccountId_.Clone() : null;
      targetAccountId_ = other.HasTargetAccountId ? other.targetAccountId_.Clone() : null;
      senderBattleTag_ = other.senderBattleTag_;
      targetBattleTag_ = other.targetBattleTag_;
      peer_ = other.HasPeer ? other.peer_.Clone() : null;
      forwardingIdentity_ = other.HasForwardingIdentity ? other.forwardingIdentity_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification Clone() {
      return new Notification(this);
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId senderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }
    /// <summary>Gets whether the sender_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSenderId {
      get { return senderId_ != null; }
    }
    /// <summary>Clears the value of the sender_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSenderId() {
      senderId_ = null;
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(34, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    /// <summary>Field number for the "sender_account_id" field.</summary>
    public const int SenderAccountIdFieldNumber = 5;
    private global::Bgs.Protocol.EntityId senderAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId SenderAccountId {
      get { return senderAccountId_; }
      set {
        senderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the sender_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSenderAccountId {
      get { return senderAccountId_ != null; }
    }
    /// <summary>Clears the value of the sender_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSenderAccountId() {
      senderAccountId_ = null;
    }

    /// <summary>Field number for the "target_account_id" field.</summary>
    public const int TargetAccountIdFieldNumber = 6;
    private global::Bgs.Protocol.EntityId targetAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId TargetAccountId {
      get { return targetAccountId_; }
      set {
        targetAccountId_ = value;
      }
    }
    /// <summary>Gets whether the target_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetAccountId {
      get { return targetAccountId_ != null; }
    }
    /// <summary>Clears the value of the target_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetAccountId() {
      targetAccountId_ = null;
    }

    /// <summary>Field number for the "sender_battle_tag" field.</summary>
    public const int SenderBattleTagFieldNumber = 7;
    private readonly static string SenderBattleTagDefaultValue = "";

    private string senderBattleTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderBattleTag {
      get { return senderBattleTag_ ?? SenderBattleTagDefaultValue; }
      set {
        senderBattleTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sender_battle_tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSenderBattleTag {
      get { return senderBattleTag_ != null; }
    }
    /// <summary>Clears the value of the "sender_battle_tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSenderBattleTag() {
      senderBattleTag_ = null;
    }

    /// <summary>Field number for the "target_battle_tag" field.</summary>
    public const int TargetBattleTagFieldNumber = 8;
    private readonly static string TargetBattleTagDefaultValue = "";

    private string targetBattleTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetBattleTag {
      get { return targetBattleTag_ ?? TargetBattleTagDefaultValue; }
      set {
        targetBattleTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "target_battle_tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetBattleTag {
      get { return targetBattleTag_ != null; }
    }
    /// <summary>Clears the value of the "target_battle_tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetBattleTag() {
      targetBattleTag_ = null;
    }

    /// <summary>Field number for the "peer" field.</summary>
    public const int PeerFieldNumber = 9;
    private global::Bgs.Protocol.ProcessId peer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.ProcessId Peer {
      get { return peer_; }
      set {
        peer_ = value;
      }
    }
    /// <summary>Gets whether the peer field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPeer {
      get { return peer_ != null; }
    }
    /// <summary>Clears the value of the peer field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPeer() {
      peer_ = null;
    }

    /// <summary>Field number for the "forwarding_identity" field.</summary>
    public const int ForwardingIdentityFieldNumber = 10;
    private global::Bgs.Protocol.Account.V1.Identity forwardingIdentity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.Identity ForwardingIdentity {
      get { return forwardingIdentity_; }
      set {
        forwardingIdentity_ = value;
      }
    }
    /// <summary>Gets whether the forwarding_identity field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasForwardingIdentity {
      get { return forwardingIdentity_ != null; }
    }
    /// <summary>Clears the value of the forwarding_identity field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearForwardingIdentity() {
      forwardingIdentity_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SenderId, other.SenderId)) return false;
      if (!object.Equals(TargetId, other.TargetId)) return false;
      if (Type != other.Type) return false;
      if(!attribute_.Equals(other.attribute_)) return false;
      if (!object.Equals(SenderAccountId, other.SenderAccountId)) return false;
      if (!object.Equals(TargetAccountId, other.TargetAccountId)) return false;
      if (SenderBattleTag != other.SenderBattleTag) return false;
      if (TargetBattleTag != other.TargetBattleTag) return false;
      if (!object.Equals(Peer, other.Peer)) return false;
      if (!object.Equals(ForwardingIdentity, other.ForwardingIdentity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSenderId) hash ^= SenderId.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      hash ^= attribute_.GetHashCode();
      if (HasSenderAccountId) hash ^= SenderAccountId.GetHashCode();
      if (HasTargetAccountId) hash ^= TargetAccountId.GetHashCode();
      if (HasSenderBattleTag) hash ^= SenderBattleTag.GetHashCode();
      if (HasTargetBattleTag) hash ^= TargetBattleTag.GetHashCode();
      if (HasPeer) hash ^= Peer.GetHashCode();
      if (HasForwardingIdentity) hash ^= ForwardingIdentity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSenderId) {
        output.WriteRawTag(10);
        output.WriteMessage(SenderId);
      }
      if (HasTargetId) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetId);
      }
      if (HasType) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (HasSenderAccountId) {
        output.WriteRawTag(42);
        output.WriteMessage(SenderAccountId);
      }
      if (HasTargetAccountId) {
        output.WriteRawTag(50);
        output.WriteMessage(TargetAccountId);
      }
      if (HasSenderBattleTag) {
        output.WriteRawTag(58);
        output.WriteString(SenderBattleTag);
      }
      if (HasTargetBattleTag) {
        output.WriteRawTag(66);
        output.WriteString(TargetBattleTag);
      }
      if (HasPeer) {
        output.WriteRawTag(74);
        output.WriteMessage(Peer);
      }
      if (HasForwardingIdentity) {
        output.WriteRawTag(82);
        output.WriteMessage(ForwardingIdentity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSenderId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderId);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (HasSenderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderAccountId);
      }
      if (HasTargetAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetAccountId);
      }
      if (HasSenderBattleTag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderBattleTag);
      }
      if (HasTargetBattleTag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetBattleTag);
      }
      if (HasPeer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Peer);
      }
      if (HasForwardingIdentity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForwardingIdentity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasSenderId) {
        if (!HasSenderId) {
          SenderId = new global::Bgs.Protocol.EntityId();
        }
        SenderId.MergeFrom(other.SenderId);
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.EntityId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      attribute_.Add(other.attribute_);
      if (other.HasSenderAccountId) {
        if (!HasSenderAccountId) {
          SenderAccountId = new global::Bgs.Protocol.EntityId();
        }
        SenderAccountId.MergeFrom(other.SenderAccountId);
      }
      if (other.HasTargetAccountId) {
        if (!HasTargetAccountId) {
          TargetAccountId = new global::Bgs.Protocol.EntityId();
        }
        TargetAccountId.MergeFrom(other.TargetAccountId);
      }
      if (other.HasSenderBattleTag) {
        SenderBattleTag = other.SenderBattleTag;
      }
      if (other.HasTargetBattleTag) {
        TargetBattleTag = other.TargetBattleTag;
      }
      if (other.HasPeer) {
        if (!HasPeer) {
          Peer = new global::Bgs.Protocol.ProcessId();
        }
        Peer.MergeFrom(other.Peer);
      }
      if (other.HasForwardingIdentity) {
        if (!HasForwardingIdentity) {
          ForwardingIdentity = new global::Bgs.Protocol.Account.V1.Identity();
        }
        ForwardingIdentity.MergeFrom(other.ForwardingIdentity);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasSenderId) {
              SenderId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(SenderId);
            break;
          }
          case 18: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(TargetId);
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 34: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
          case 42: {
            if (!HasSenderAccountId) {
              SenderAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(SenderAccountId);
            break;
          }
          case 50: {
            if (!HasTargetAccountId) {
              TargetAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(TargetAccountId);
            break;
          }
          case 58: {
            SenderBattleTag = input.ReadString();
            break;
          }
          case 66: {
            TargetBattleTag = input.ReadString();
            break;
          }
          case 74: {
            if (!HasPeer) {
              Peer = new global::Bgs.Protocol.ProcessId();
            }
            input.ReadMessage(Peer);
            break;
          }
          case 82: {
            if (!HasForwardingIdentity) {
              ForwardingIdentity = new global::Bgs.Protocol.Account.V1.Identity();
            }
            input.ReadMessage(ForwardingIdentity);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
